on:
  pull_request:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *' # at 02:00

jobs:
  rhoai-in-kind:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        workbench_branch:
          - rhoai-2.22

    steps:

      - uses: actions/checkout@v4

      - uses: actions/checkout@v4
        with:
          repository: opendatahub-io/opendatahub-tests
          ref: main
          path: opendatahub-tests

      # Otherwise we may end up with a random Python version?
      # https://github.com/jiridanek/rhoai-in-kind/issues/16
      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: '3.13'

      # ERROR: failed to create cluster: failed to pull image "docker.io/kindest/node:v1.31.6":
      #  command "docker pull docker.io/kindest/node:v1.31.6" failed with error: exit status 1
      - name: Pre-pull the kind image
        run: timeout 120s bash -c 'while ! docker pull kindest/node:v1.31.6; do sleep 1; done'

      - name: Kubernetes KinD Cluster
        id: kind-cluster
        uses: helm/kind-action@v1
        with:
          version: v0.27.0
          # Dashboard tests fail on k8s 1.32
          # https://hub.docker.com/r/kindest/node/tags
          # Let's keep using same version as for dashboard then
          node_image: "docker.io/kindest/node:v1.31.6"
          cluster_name: kind
          config: components/00-kind-cluster.yaml

      # âœ˜ Istiod encountered an error: failed to wait for resource: resources not ready after 5m0s: context deadline exceeded
      #    Deployment/istio-system/istiod (container failed to start: ImagePullBackOff: Back-off pulling image "docker.io/istio/pilot:1.25.1")Error: failed to install manifests: failed to wait for resource: resources not ready after 5m0s: context deadline exceeded
      #    Deployment/istio-system/istiod (container failed to start: ImagePullBackOff: Back-off pulling image "docker.io/istio/pilot:1.25.1")
      # CAUTION: the image tag is likely to go out of date, try to keep in sync
      - name: Pre-pull istio inside kind cluster
        run: |
          set -Eeuxo pipefail
          timeout 120s bash -c 'while ! docker pull docker.io/istio/pilot:1.25.1; do sleep 1; done'
          kind load docker-image docker.io/istio/pilot:1.25.1

      - name: Deploy stuff into Kubernetes
        run: ${PYTHON3} components/deploy.py --workbench-branch=${{ matrix.workbench_branch }}
        env:
          PYTHON3: "${{ steps.setup-python.outputs.python-path }}"

      # https://docs.astral.sh/uv/guides/integration/github/#installation
      # https://github.com/astral-sh/setup-uv
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "opendatahub-tests/uv.lock"

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "opendatahub-tests/pyproject.toml"

      - name: "Set up faked openshift oauth for oc client"
        run: |
          set -Eeuxo pipefail
          oc apply -f components/opendatahub-tests/openldap.yaml
          pushd components/opendatahub-tests/nginx_certs
          ./gen.sh
          popd
          nginx -c "${PWD}/components/opendatahub-tests/nginx.conf" &
          while ! nc -z 127.0.0.1 8443; do sleep 1; done
          oc login --insecure-skip-tls-verify=true -u htpasswd-cluster-admin-user -p password 127.0.0.1:8443

      - name: Run workbenches tests
        run: |
          set -Eeuxo pipefail
          uv run pytest tests/workbenches
        working-directory: opendatahub-tests

      - name: Collect logs
        run: ${PYTHON3} components/logs.py
        id: collect-logs
        if: "!cancelled() && steps.kind-cluster.outcome == 'success'"
        env:
          PYTHON3: "${{ steps.setup-python.outputs.python-path }}"

      - name: Archive cluster-logs
        uses: actions/upload-artifact@v4
        if: "steps.collect-logs.outputs.debug_bundle_dir != '' && !cancelled()"
        with:
          name: cluster-logs-${{ steps.artifact-name.outputs.artifact-name }}
          path: ${{ steps.collect-logs.outputs.debug_bundle_dir }}
