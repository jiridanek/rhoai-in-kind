on:
  pull_request:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *' # at 02:00

jobs:
  rhoai-in-kind:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        test_case:
          - "tests/Tests/0500__ide/0501__ide_jupyterhub/test-minimal-image.robot"
          - "tests/Tests/0500__ide/0501__ide_jupyterhub/minimal-vscode-test.robot"
          - "tests/Tests/0500__ide/0501__ide_jupyterhub/minimal-pytorch-test.robot"
          - "tests/Tests/0500__ide/0501__ide_jupyterhub/minimal-tensorflow-test.robot"
          - "tests/Tests/0500__ide/0501__ide_jupyterhub/custom-image.robot"
          - "tests/Tests/0500__ide/0501__ide_jupyterhub/networkpolicy-test.robot"
          - "tests/Tests/0500__ide/0501__ide_jupyterhub/test-pipChanges-not-permanent.robot"
          - "tests/Tests/0500__ide/0501__ide_jupyterhub/test-jupyterlab-git-notebook.robot"

          - "tests/Tests/0500__ide/0501__ide_jupyterhub/image-iteration.robot"
          - "tests/Tests/0500__ide/0501__ide_jupyterhub/long-running-test-generic-ds.robot"
          - "tests/Tests/0500__ide/0501__ide_jupyterhub/multiple-image-tags.robot"
          # TODO: Executing keyword 'Login To Openshift' failed
          #- "tests/Tests/0500__ide/0501__ide_jupyterhub/test.robot"
          - "tests/Tests/0500__ide/0501__ide_jupyterhub/test-filling-pvc.robot"
          - "tests/Tests/0500__ide/0501__ide_jupyterhub/test-folder-permissions.robot"
          - "tests/Tests/0500__ide/0501__ide_jupyterhub/test-jupyterlab-flask-notebook.robot"
          # TODO: Executing keyword 'Login To Openshift' failed
          #- "tests/Tests/0500__ide/0501__ide_jupyterhub/test-jupyterlab-notebook.robot"
          # TODO: Executing keyword 'Login To Openshift' failed
          #- "tests/Tests/0500__ide/0501__ide_jupyterhub/test-jupyterlab-time.robot"
          # TODO: rhds/main is not kept up to date, so this is failing
          #- "tests/Tests/0500__ide/0501__ide_jupyterhub/test-versions.robot"

          # TODO: looks broken, menu navigation is weird
          #- "tests/Tests/0500__ide/0507__culler/culler.robot"

          # oc new-project "elyra-test-6893" --display-name="elyra-test-6893" --description="testing Elyra pipeline functionality" --as=ldap-user2 --as-group=system:authenticated --as-group=system:authenticated:oauth 2>&1
          #- "tests/Tests/0500__ide/0502__ide_elyra.robot"

          # my env does make everyone cluster-admin, so perms tests are meaningless
          - "tests/Tests/0500__ide/0501__ide_jupyterhub/base-user-shutdown-test.robot"
          # TODO: 9) error: the server doesn't have a resource type "group": 1 != 0
          #- "tests/Tests/0500__ide/0501__ide_jupyterhub/jupyterhub-user-access.robot"

          # logs into openshift web console which we don't have here
          #- "tests/Tests/0500__ide/0501__ide_jupyterhub/test.robot"

          # can't be checked because I'm deleting resource requests with Kyverno
          #- "tests/Tests/0500__ide/0500__ide_deployment_cr_checks.robot"

          # everything's excluded in this one
          # > [ ERROR ] Suite 'Plugin-Verification' contains no tests not matching tags 'TBC', 'AutomationBug', 'ProductBug', 'Dashboard', 'deprecatedTest' or 'ExcludeOnRHOAI'.
          #- "tests/Tests/0500__ide/0501__ide_jupyterhub/plugin-verification.robot"

    steps:

      - uses: actions/checkout@v4

      - uses: actions/checkout@v4
        with:
          repository: red-hat-data-services/ods-ci
          ref: master
          path: ods-ci

      # Otherwise we may end up with a random Python version?
      # https://github.com/jiridanek/rhoai-in-kind/issues/16
      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: '3.13'

      # Pulling large images (pytorch, tensorflow) we are otherwise running out of disk apace
      - name: Relocate docker data dir
        run: |
          sudo mv components/gha/etc_docker_daemon.json /etc/docker/daemon.json
          sudo systemctl restart docker

      # ERROR: failed to create cluster: failed to pull image "docker.io/kindest/node:v1.31.6":
      #  command "docker pull docker.io/kindest/node:v1.31.6" failed with error: exit status 1
      - name: Pre-pull the kind image
        run: timeout 120s bash -c 'while ! docker pull kindest/node:v1.31.6; do sleep 1; done'

      - name: Kubernetes KinD Cluster
        id: kind-cluster
        uses: helm/kind-action@v1
        with:
          version: v0.27.0
          # Dashboard tests fail on k8s 1.32
          # https://hub.docker.com/r/kindest/node/tags
          # Let's keep using same version as for dashboard then
          node_image: "docker.io/kindest/node:v1.31.6"
          cluster_name: kind
          config: components/00-kind-cluster.yaml

      - name: Deploy stuff into Kubernetes
        run: ${PYTHON3} components/deploy.py
        env:
          PYTHON3: "${{ steps.setup-python.outputs.python-path }}"

      # âœ˜ Istiod encountered an error: failed to wait for resource: resources not ready after 5m0s: context deadline exceeded
      #    Deployment/istio-system/istiod (container failed to start: ImagePullBackOff: Back-off pulling image "docker.io/istio/pilot:1.25.1")Error: failed to install manifests: failed to wait for resource: resources not ready after 5m0s: context deadline exceeded
      #    Deployment/istio-system/istiod (container failed to start: ImagePullBackOff: Back-off pulling image "docker.io/istio/pilot:1.25.1")
      # CAUTION: the image tag is likely to go out of date, try to keep in sync
      - name: Pre-pull istio inside kind cluster
        run: |
          set -Eeuxo pipefail
          timeout 120s bash -c 'while ! docker pull docker.io/istio/pilot:1.25.1; do sleep 1; done'
          kind load docker-image docker.io/istio/pilot:1.25.1

      # https://docs.astral.sh/uv/guides/integration/github/#installation
      # https://github.com/astral-sh/setup-uv
      - name: Install Poetry
        run: |
          pipx ensurepath
          pipx install poetry

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: poetry
          cache-dependency-path: "ods-ci/poetry.lock"

      - name: "Set up faked openshift oauth for oc client"
        run: |
          set -Eeuxo pipefail
          oc apply -f components/opendatahub-tests/openldap.yaml
          pushd components/opendatahub-tests/nginx_certs
          ./gen.sh
          popd
          nginx -c "${PWD}/components/opendatahub-tests/nginx.conf" &
          while ! nc -z 127.0.0.1 8443; do sleep 1; done
          oc login --insecure-skip-tls-verify=true -u admin-user -p password 127.0.0.1:8443

      - name: Prepare test-variables.yml
        run: mv components/ods-ci/test-variables.yml ods-ci/ods_ci/test-variables.yml

      # NOTE: Tests in ods-ci often depend on what's before them in the file, so it's best to run file-by-file
      - name: Run ods-ci tests
        run: |
          set -Eeuxo pipefail
          ./run_robot_test.sh --skip-oclogin true --test-variables-file ${{ github.workspace }}/ods-ci/ods_ci/test-variables.yml --test-case ${{ matrix.test_case }} --extra-robot-args '-e AutomationBug -e ProductBug -e Dashboard -e deprecatedTest -e ExcludeOnRHOAI -e Resources-GPU'
        # the location is important and it's not worth it to change it
        # * poetry looks for the lock file in what is the current directory or its parents
        # * by default TEST_CASE_FILE=tests/Tests
        working-directory: ods-ci/ods_ci
        env:
          # https://github.com/jiridanek/rhoai-in-kind/issues/5
          # https://github.com/kubernetes/kubernetes/issues/131189
          KUBECTL_REMOTE_COMMAND_WEBSOCKETS: "false"
          # https://developer.chrome.com/docs/chromedriver/logging
          CHROME_LOG_FILE: "/tmp/chromedriver.log"
          #
          DBUS_SESSION_BUS_ADDRESS: "/dev/null"

      - name: Compute test-output name
        if: "!cancelled()"
        id: artifact-name
        shell: python {0}
        # language: python
        run: |
          import pathlib
          import os
          import re
          
          test_case = os.environ["TEST_CASE"]
          artifact_name = re.sub(r'^.*/(?P<filename>[^/]+)\.robot$', r'\g<filename>', test_case)
          pathlib.Path(os.environ["GITHUB_OUTPUT"]).write_text(f"artifact-name={artifact_name}")

        env:
          TEST_CASE: ${{ matrix.test_case }}

      - name: Collect logs
        run: ${PYTHON3} components/logs.py
        id: collect-logs
        if: "!cancelled() && steps.kind-cluster.outcome == 'success'"
        env:
          PYTHON3: "${{ steps.setup-python.outputs.python-path }}"

      - name: Archive cluster-logs
        uses: actions/upload-artifact@v4
        if: "steps.collect-logs.outputs.logs_dir != '' && !cancelled()"
        with:
          name: cluster-logs-${{ steps.artifact-name.outputs.artifact-name }}
          path: ${{ steps.collect-logs.outputs.logs_dir }}

      - name: Archive test-output
        uses: actions/upload-artifact@v4
        if: "!cancelled()"
        with:
          name: test-output-${{ steps.artifact-name.outputs.artifact-name }}
          path: ods-ci/ods_ci/test-output

      - name: Archive chromedriver.log
        uses: actions/upload-artifact@v4
        if: "!cancelled()"
        with:
          name: chromedriver-${{ steps.artifact-name.outputs.artifact-name }}
          path: /tmp/chromedriver.log

      - run: df -h
        if: "!cancelled()"
      - run: sudo dmesg
        if: "!cancelled()"
      - run: journalctl -xe
        if: "!cancelled()"
